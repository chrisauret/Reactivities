[{"C:\\source\\Reactivities\\client-app\\src\\index.tsx":"1","C:\\source\\Reactivities\\client-app\\src\\reportWebVitals.ts":"2","C:\\source\\Reactivities\\client-app\\src\\app\\layout\\App.tsx":"3","C:\\source\\Reactivities\\client-app\\src\\features\\navbar.tsx":"4","C:\\source\\Reactivities\\client-app\\src\\features\\activities\\dashboard\\ActivityDashboard.tsx":"5","C:\\source\\Reactivities\\client-app\\src\\features\\activities\\dashboard\\ActivityList.tsx":"6","C:\\source\\Reactivities\\client-app\\src\\features\\activities\\details\\ActivityDetails.tsx":"7","C:\\source\\Reactivities\\client-app\\src\\features\\activities\\form\\ActivityForm.tsx":"8"},{"size":523,"mtime":1608160476576,"results":"9","hashOfConfig":"10"},{"size":425,"mtime":499162500000,"results":"11","hashOfConfig":"10"},{"size":1132,"mtime":1608323477065,"results":"12","hashOfConfig":"10"},{"size":727,"mtime":1608194704962,"results":"13","hashOfConfig":"10"},{"size":940,"mtime":1608323013629,"results":"14","hashOfConfig":"10"},{"size":1511,"mtime":1608211939182,"results":"15","hashOfConfig":"10"},{"size":1062,"mtime":1608212526491,"results":"16","hashOfConfig":"10"},{"size":573,"mtime":1608211176079,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"bpf4sv",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"20"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"20"},"C:\\source\\Reactivities\\client-app\\src\\index.tsx",[],["37","38"],"C:\\source\\Reactivities\\client-app\\src\\reportWebVitals.ts",[],"C:\\source\\Reactivities\\client-app\\src\\app\\layout\\App.tsx",[],"C:\\source\\Reactivities\\client-app\\src\\features\\navbar.tsx",[],"C:\\source\\Reactivities\\client-app\\src\\features\\activities\\dashboard\\ActivityDashboard.tsx",["39"],"C:\\source\\Reactivities\\client-app\\src\\features\\activities\\dashboard\\ActivityList.tsx",[],"C:\\source\\Reactivities\\client-app\\src\\features\\activities\\details\\ActivityDetails.tsx",["40"],"import React from 'react'\r\nimport { Button, Card, Icon, Image } from 'semantic-ui-react'\r\nimport { IActivity } from '../../../models/activity'\r\n\r\ninterface IProps {\r\n    activity: IActivity;\r\n}\r\n\r\nexport const ActivityDetails: React.FC<IProps> = ({ activity }) => {\r\n    return (\r\n        <Card fluid>\r\n            <Image src={`/assets/categoryImages/${activity.category}.jpg`} wrapped ui={false} />\r\n            <Card.Content>\r\n                <Card.Header>{activity.title}</Card.Header>\r\n                <Card.Meta>\r\n                    <span className='date'>{activity.date}</span>\r\n                </Card.Meta>\r\n                <Card.Description>\r\n                    {activity.description}\r\n                </Card.Description>\r\n            </Card.Content>\r\n            <Card.Content extra>\r\n                <Button.Group widths={2}>\r\n                    <Button basic color='blue' content='Edit' />\r\n                    <Button basic color='grey' content='Cancel' />\r\n                </Button.Group>\r\n            </Card.Content>\r\n        </Card>\r\n    )\r\n}\r\n","C:\\source\\Reactivities\\client-app\\src\\features\\activities\\form\\ActivityForm.tsx",["41"],"import React from 'react'\r\nimport { Segment, Form, Input } from 'semantic-ui-react'\r\n\r\nexport const ActivityForm = () => {\r\n    return (\r\n        <Segment>\r\n            <Form>\r\n                <Form.Input placeholder='Title' />\r\n                <Form.TextArea rows={2} placeholder='Description' />\r\n                <Form.Input placeholder='Category' />\r\n                <Form.Input type={'date'} placeholder='Date' />\r\n                <Form.Input placeholder='City' />\r\n                <Form.Input placeholder='Venue' />\r\n            </Form>\r\n        </Segment>\r\n    )\r\n}\r\n",{"ruleId":"42","replacedBy":"43"},{"ruleId":"44","replacedBy":"45"},{"ruleId":"46","severity":1,"message":"47","line":2,"column":16,"nodeType":"48","messageId":"49","endLine":2,"endColumn":20},{"ruleId":"46","severity":1,"message":"50","line":2,"column":24,"nodeType":"48","messageId":"49","endLine":2,"endColumn":28},{"ruleId":"46","severity":1,"message":"51","line":2,"column":25,"nodeType":"48","messageId":"49","endLine":2,"endColumn":30},"no-native-reassign",["52"],"no-negated-in-lhs",["53"],"@typescript-eslint/no-unused-vars","'List' is defined but never used.","Identifier","unusedVar","'Icon' is defined but never used.","'Input' is defined but never used.","no-global-assign","no-unsafe-negation"]