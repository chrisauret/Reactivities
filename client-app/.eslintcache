[{"C:\\source\\Reactivities\\client-app\\src\\index.tsx":"1","C:\\source\\Reactivities\\client-app\\src\\reportWebVitals.ts":"2","C:\\source\\Reactivities\\client-app\\src\\app\\layout\\App.tsx":"3","C:\\source\\Reactivities\\client-app\\src\\features\\navbar.tsx":"4","C:\\source\\Reactivities\\client-app\\src\\features\\activities\\dashboard\\ActivityDashboard.tsx":"5","C:\\source\\Reactivities\\client-app\\src\\features\\activities\\dashboard\\ActivityList.tsx":"6","C:\\source\\Reactivities\\client-app\\src\\features\\activities\\details\\ActivityDetails.tsx":"7","C:\\source\\Reactivities\\client-app\\src\\features\\activities\\form\\ActivityForm.tsx":"8","C:\\source\\Reactivities\\client-app\\src\\app\\api\\agent.ts":"9","C:\\source\\Reactivities\\client-app\\src\\app\\layout\\LoadingComponent.tsx":"10","C:\\source\\Reactivities\\client-app\\src\\app\\stores\\activityStore.ts":"11"},{"size":523,"mtime":1608160476576,"results":"12","hashOfConfig":"13"},{"size":425,"mtime":499162500000,"results":"14","hashOfConfig":"13"},{"size":2279,"mtime":1608553170472,"results":"15","hashOfConfig":"13"},{"size":954,"mtime":1608552762107,"results":"16","hashOfConfig":"13"},{"size":2175,"mtime":1608553129970,"results":"17","hashOfConfig":"13"},{"size":2417,"mtime":1608553791236,"results":"18","hashOfConfig":"13"},{"size":1489,"mtime":1608551149596,"results":"19","hashOfConfig":"13"},{"size":2688,"mtime":1608553093900,"results":"20","hashOfConfig":"13"},{"size":1228,"mtime":1608421457311,"results":"21","hashOfConfig":"13"},{"size":344,"mtime":1608422584441,"results":"22","hashOfConfig":"13"},{"size":1861,"mtime":1608554304068,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"bpf4sv",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"26"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"26"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\source\\Reactivities\\client-app\\src\\index.tsx",[],["49","50"],"C:\\source\\Reactivities\\client-app\\src\\reportWebVitals.ts",[],"C:\\source\\Reactivities\\client-app\\src\\app\\layout\\App.tsx",["51","52"],"C:\\source\\Reactivities\\client-app\\src\\features\\navbar.tsx",[],"C:\\source\\Reactivities\\client-app\\src\\features\\activities\\dashboard\\ActivityDashboard.tsx",["53","54"],"C:\\source\\Reactivities\\client-app\\src\\features\\activities\\dashboard\\ActivityList.tsx",[],"C:\\source\\Reactivities\\client-app\\src\\features\\activities\\details\\ActivityDetails.tsx",["55"],"import React, { useContext } from 'react'\r\nimport { Button, Card, Image } from 'semantic-ui-react'\r\nimport { IActivity } from '../../../models/activity'\r\nimport ActivityStore from '../../../app/stores/activityStore'\r\nimport { observer } from 'mobx-react-lite'\r\n\r\ninterface IProps {\r\n    setEditMode: (editMode: boolean) => void;\r\n    setSelectedActivity: (activity: IActivity | null) => void;\r\n}\r\n\r\nconst ActivityDetails: React.FC<IProps> = ({ setEditMode, setSelectedActivity }) => {\r\n\r\n    const { selectedActivity: activity, editMode } = useContext(ActivityStore);\r\n\r\n    return (\r\n        <Card fluid>\r\n            <Image src={`/assets/categoryImages/${activity!.category}.jpg`} wrapped ui={false} />\r\n            <Card.Content>\r\n                <Card.Header>{activity!.title}</Card.Header>\r\n                <Card.Meta>\r\n                    <span className='date'>{activity!.date}</span>\r\n                </Card.Meta>\r\n                <Card.Description>\r\n                    {activity!.description}\r\n                </Card.Description>\r\n            </Card.Content>\r\n            <Card.Content extra>\r\n                <Button.Group widths={2}>\r\n                    <Button basic color='blue' content='Edit' onClick={() => setEditMode(true)} />\r\n                    <Button basic color='grey' content='Cancel' onClick={() => setSelectedActivity(null)} />\r\n                </Button.Group>\r\n            </Card.Content>\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default observer(ActivityDetails);","C:\\source\\Reactivities\\client-app\\src\\features\\activities\\form\\ActivityForm.tsx",[],"C:\\source\\Reactivities\\client-app\\src\\app\\api\\agent.ts",["56"],"import axios, { AxiosResponse } from 'axios'\r\nimport { IActivity } from '../../models/activity';\r\n\r\naxios.defaults.baseURL = 'https://localhost:5001/api';\r\n\r\nconst responseBody = (response: AxiosResponse) => response.data;\r\n\r\nconst sleep = (ms: number) => (response: AxiosResponse) =>\r\n    new Promise<AxiosResponse>(resolve => setTimeout(() => resolve(response), ms));\r\n\r\nconst requests = {\r\n    get: (url: string) => axios.get(url).then(sleep(800)).then(responseBody),\r\n    post: (url: string, body: {}) => axios.post(url, body).then(sleep(800)).then(responseBody),\r\n    put: (url: string, body: {}) => axios.put(url, body).then(sleep(800)).then(responseBody),\r\n    del: (url: string) => axios.delete(url).then(sleep(800)).then(responseBody)\r\n}\r\n\r\nconst Activities = {\r\n    //list: () => requests.get('/activities'),\r\n    list: (): Promise<IActivity[]> => requests.get('/activities'),\r\n    details: (id: string) => requests.get(`/activities/${id}`),\r\n    create: (activity: IActivity) => requests.post('/activities', activity),\r\n    update: (activity: IActivity) => requests.put(`/activities/${activity.id}`, activity),\r\n    delete: (id: string) => requests.del(`/activities/${id}`),\r\n};\r\n\r\nexport default {\r\n    Activities\r\n}","C:\\source\\Reactivities\\client-app\\src\\app\\layout\\LoadingComponent.tsx",[],"C:\\source\\Reactivities\\client-app\\src\\app\\stores\\activityStore.ts",["57"],{"ruleId":"58","replacedBy":"59"},{"ruleId":"60","replacedBy":"61"},{"ruleId":"62","severity":1,"message":"63","line":16,"column":10,"nodeType":"64","messageId":"65","endLine":16,"endColumn":26},{"ruleId":"62","severity":1,"message":"66","line":17,"column":10,"nodeType":"64","messageId":"65","endLine":17,"endColumn":18},{"ruleId":"67","severity":1,"message":"68","line":52,"column":47,"nodeType":"69","messageId":"70","endLine":52,"endColumn":49},{"ruleId":"67","severity":1,"message":"68","line":52,"column":70,"nodeType":"69","messageId":"70","endLine":52,"endColumn":72},{"ruleId":"62","severity":1,"message":"66","line":14,"column":41,"nodeType":"64","messageId":"65","endLine":14,"endColumn":49},{"ruleId":"71","severity":1,"message":"72","line":27,"column":1,"nodeType":"73","endLine":29,"endColumn":2},{"ruleId":"62","severity":1,"message":"74","line":1,"column":38,"nodeType":"64","messageId":"65","endLine":1,"endColumn":46},"no-native-reassign",["75"],"no-negated-in-lhs",["76"],"@typescript-eslint/no-unused-vars","'selectedActivity' is assigned a value but never used.","Identifier","unusedVar","'editMode' is assigned a value but never used.","no-mixed-operators","Unexpected mix of '&&' and '||'.","LogicalExpression","unexpectedMixedOperator","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","'computed' is defined but never used.","no-global-assign","no-unsafe-negation"]